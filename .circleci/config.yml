version: 2
jobs:
  node:
    docker:
      - image: circleci/node:10
    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - node_modules/*

  android-alpha:
    working_directory: /home/circleci/project/android
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: /home/circleci/project

      - attach_workspace:
          at: /home/circleci/project

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: fastlane android alpha
          command: |
            git config user.email $RELEASE_MANAGER_GITHUB_USER_EMAIL
            git config --global user.name $RELEASE_MANAGER_GITHUB_USER_NAME
            echo -e "\nMYAPP_RELEASE_STORE_PASSWORD=$ANDROID_KEYSTORE_PASSWORD\nMYAPP_RELEASE_KEY_PASSWORD=$ANDROID_KEYSTORE_PASSWORD" >> ./gradle.properties
            echo $GOOGLE_PLAY_CREDS_JSON > ./api_key.json
            bundle update fastlane
            bundle exec fastlane alpha

      - store_artifacts:
          path: app/build/outputs/apk/release/app-release.apk

  android-beta:
    working_directory: /home/circleci/project/android
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: /home/circleci/project

      - attach_workspace:
          at: /home/circleci/project

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: fastlane android beta
          command: |
            git config user.email $RELEASE_MANAGER_GITHUB_USER_EMAIL
            git config --global user.name $RELEASE_MANAGER_GITHUB_USER_NAME
            echo -e "\nMYAPP_RELEASE_STORE_PASSWORD=$ANDROID_KEYSTORE_PASSWORD\nMYAPP_RELEASE_KEY_PASSWORD=$ANDROID_KEYSTORE_PASSWORD" >> ./gradle.properties
            echo $GOOGLE_PLAY_CREDS_JSON > ./api_key.json
            bundle update fastlane
            bundle exec fastlane beta

      - store_artifacts:
          path: app/build/outputs/apk/release/app-release.apk

  android-production:
    working_directory: /home/circleci/project/android
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: /home/circleci/project

      - attach_workspace:
          at: /home/circleci/project

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: fastlane android deploy
          command: |
            bundle update fastlane
            bundle exec fastlane deploy

workflows:
  version: 2
  node-android-ios:
    jobs:
      - node:
          filters:
            branches:
              only: 
                — master
                - develop

      - android-hold:
          type: approval
          filters:
            branches:
              only: 
                — master

      - android-alpha:
          requires:
            - node
          filters:
            branches:
              only: 
                — develop

      - android-beta:
          requires:
            - node
          filters:
            branches:
              only: 
                — master

      - android-production:
          requires:
            - android-hold